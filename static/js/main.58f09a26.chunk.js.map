{"version":3,"sources":["components/CardPreview.component.jsx","components/FormInput/FormInput.styles.jsx","components/FormInput/FormInput.component.jsx","pages/homePage/home.page.styles.jsx","pages/homePage/home.page.jsx","redux/slices/cardsSlice.js","pages/projectPage/project.page.styles.jsx","pages/projectPage/project.page.jsx","pages/profilePage/profile.page.styles.jsx","pages/profilePage/profile.page.jsx","pages/404.jsx","components/Header.component.jsx","App.js","redux/store.js","index.js"],"names":["CardPreview","id","title","text","Card","className","style","width","cursor","to","Body","Title","toUpperCase","Text","shrinkLabel","css","GroupContainer","styled","div","FormInputContainer","input","FormInputLabel","label","FormInput","props","value","HomeRootContainer","CardPreviewContainer","TopContainer","SearchBarContainer","HomePage","cards","useSelector","state","history","useHistory","useState","searchWord","setSearchWord","filteredCards","Object","values","filter","card","profile","name","toLowerCase","includes","onChange","e","target","Button","variant","size","onClick","push","isEmpty","entries","map","data","createdAt","slice","cardsSlice","createSlice","initialState","reducers","createCard","reducer","action","payload","prepare","nanoid","Date","toISOString","todos","updateProfile","cardId","addTodo","todoData","newContent","content","isDone","toggleTodoIsDone","todoId","todo","deleteTodo","obj","deleteCard","hasOwnProperty","actions","ProjectRootContainer","MainContainer","ProfileSection","TodoSection","InlineProfile","p","InlineTodo","DeleteTodoContainer","CompletedTodoTitle","DeleteCardContainer","DeletionBoxContainer","ProjectPage","match","params","setNewContent","dispatch","useDispatch","undefined","showDeletionBox","toggleDeletionBox","deletionInput","setDeletionInput","handleDeleteTodoClicked","parentNode","key","field","length","renderActiveTodos","renderCompleteTodos","type","defaultChecked","htmlFor","color","renderTodos","fontWeight","fontSize","boxShadow","preventDefault","alert","ProfileRootContainer","FormContainer","form","CustomFieldContainer","SelectContainer","select","CustomFieldDisplayContainer","DeleteButtonContainer","ProfilePage","address","email","mobile","customFields","setProfile","setField","handleCustomFieldChange","handleCustomFieldDelete","entry","renderCustomFields","required","styles","disabled","ButtonGroup","hidden","NotFoundPage","Header","Navbar","collapseOnSelect","expand","bg","sticky","Container","Brand","Nav","App","exact","path","component","configureStore","cardsReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.58f09a26.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CardPreview = ({ id, title, text }) => (\r\n  <Card\r\n    className=\"mx-2 my-3 shadow cardPreview\"\r\n    style={{ width: \"18rem\", cursor: \"pointer\" }}\r\n  >\r\n    <Link to={`project/${id}`} style={{ width: \"100%\" }}>\r\n      <Card.Body>\r\n        <Card.Title className=\"text-center mb-3 \">\r\n          {title.toUpperCase()}\r\n        </Card.Title>\r\n        <Card.Text>{text}</Card.Text>\r\n      </Card.Body>\r\n    </Link>\r\n  </Card>\r\n);\r\n\r\nexport default CardPreview;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst shrinkLabel = css`\r\n  top: -16px;\r\n  font-size: 12px;\r\n  color: black;\r\n`;\r\n\r\nexport const GroupContainer = styled.div`\r\n  position: relative;\r\n  margin: 15px;\r\n`;\r\n\r\nexport const FormInputContainer = styled.input`\r\n  width: 100%;\r\n  border-top-style: hidden;\r\n  border-right-style: hidden;\r\n  border-left-style: hidden;\r\n  font-size: 1.1rem;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:focus ~ label {\r\n    ${shrinkLabel}\r\n  }\r\n`;\r\n\r\nexport const FormInputLabel = styled.label`\r\n  color: lightgray;\r\n  font-size: 1.1rem;\r\n  font-weight: normal;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  left: 10px;\r\n  top: -5px;\r\n  transition: 300ms ease all;\r\n\r\n  &.shrink {\r\n    ${shrinkLabel}\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  FormInputContainer,\r\n  GroupContainer,\r\n  FormInputLabel,\r\n} from \"./FormInput.styles\";\r\n\r\nconst FormInput = ({ label, ...props }) => (\r\n  <GroupContainer>\r\n    <FormInputContainer {...props} />\r\n    {label ? (\r\n      <FormInputLabel className={props.value ? \"shrink\" : \"\"}>\r\n        {label}\r\n      </FormInputLabel>\r\n    ) : null}\r\n  </GroupContainer>\r\n);\r\n\r\nexport default FormInput;\r\n","import styled from \"styled-components\";\r\n\r\nexport const HomeRootContainer = styled.div`\r\n  width: 70%;\r\n  min-width: 350px;\r\n  /* max-width: 600px; */\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  flex-wrap: nowrap;\r\n`;\r\n\r\nexport const CardPreviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const TopContainer = styled.div`\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  margin: 30px auto;\r\n  display: flex;\r\n  flex-direction: row;\r\n  /* flex-wrap: nowrap; */\r\n  justify-content: space-around;\r\n\r\n  button {\r\n    height: 45px;\r\n    width: 60px;\r\n    padding: 5px 10px;\r\n  }\r\n`;\r\n\r\nexport const SearchBarContainer = styled.div`\r\n  width: 50%;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport CardPreview from \"../../components/CardPreview.component\";\r\nimport FormInput from \"../../components/FormInput/FormInput.component\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nimport {\r\n  HomeRootContainer,\r\n  CardPreviewContainer,\r\n  TopContainer,\r\n  SearchBarContainer,\r\n} from \"./home.page.styles\";\r\n\r\nconst HomePage = () => {\r\n  const cards = useSelector((state) => state.cards);\r\n  const history = useHistory();\r\n  const [searchWord, setSearchWord] = useState(\"\");\r\n\r\n  const filteredCards = searchWord\r\n    ? Object.values(cards).filter((card) =>\r\n        card.profile.name.toLowerCase().includes(searchWord.toLowerCase())\r\n      )\r\n    : cards;\r\n\r\n  return (\r\n    <HomeRootContainer>\r\n      <TopContainer>\r\n        <SearchBarContainer>\r\n          <FormInput\r\n            label=\"search\"\r\n            value={searchWord}\r\n            onChange={(e) => setSearchWord(e.target.value)}\r\n          />\r\n        </SearchBarContainer>\r\n        <Button\r\n          variant=\"outline-dark\"\r\n          size=\"md\"\r\n          onClick={() => history.push(\"/new\")}\r\n        >\r\n          NEW\r\n        </Button>\r\n      </TopContainer>\r\n      <CardPreviewContainer>\r\n        {isEmpty(cards) ? (\r\n          <h2>no cards...</h2>\r\n        ) : (\r\n          Object.entries(filteredCards).map(([id, data]) => (\r\n            <CardPreview\r\n              key={id}\r\n              id={id}\r\n              title={data.profile.name}\r\n              text={data.createdAt.slice(0, 10)}\r\n            />\r\n          ))\r\n        )}\r\n        {/* <CardPreview\r\n          key=\"fake\"\r\n          id=\"fake\"\r\n          title=\"Non-existing Card\"\r\n          text=\"to mimic manually typed card id\"\r\n        /> */}\r\n      </CardPreviewContainer>\r\n    </HomeRootContainer>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import { createSlice, nanoid } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {};\r\n\r\nconst cardsSlice = createSlice({\r\n  name: \"cards\",\r\n  initialState,\r\n  reducers: {\r\n    createCard: {\r\n      reducer: (state, action) => {\r\n        const { id, data } = action.payload;\r\n        return { ...state, [id]: data };\r\n      },\r\n      prepare: (profile) => {\r\n        return {\r\n          payload: {\r\n            id: nanoid(),\r\n            data: {\r\n              createdAt: new Date().toISOString(),\r\n              profile: profile,\r\n              todos: [],\r\n            },\r\n          },\r\n        };\r\n      },\r\n    },\r\n\r\n    updateProfile(state, action) {\r\n      const { cardId, profile } = action.payload;\r\n      return { ...state, [cardId]: { ...state[cardId], profile: profile } };\r\n    },\r\n\r\n    addTodo: {\r\n      reducer: (state, action) => {\r\n        const { cardId, todoData } = action.payload;\r\n        const card = state[cardId];\r\n        if (card) {\r\n          card.todos.push(todoData);\r\n        }\r\n      },\r\n      prepare: (data) => {\r\n        const { cardId, newContent } = data;\r\n        return {\r\n          payload: {\r\n            cardId: cardId,\r\n            todoData: {\r\n              id: nanoid(),\r\n              content: newContent,\r\n              isDone: false,\r\n            },\r\n          },\r\n        };\r\n      },\r\n    },\r\n\r\n    toggleTodoIsDone(state, action) {\r\n      const { cardId, todoId } = action.payload;\r\n      const card = state[cardId];\r\n      if (card) {\r\n        const todos = card.todos.map((todo) =>\r\n          todo.id === todoId ? { ...todo, isDone: !todo.isDone } : todo\r\n        );\r\n        card.todos = todos;\r\n      }\r\n    },\r\n\r\n    deleteTodo(state, action) {\r\n      const { cardId, todoId } = action.payload;\r\n      const card = state[cardId];\r\n      if (card) {\r\n        card.todos = card.todos.filter((obj) => obj.id !== todoId);\r\n      }\r\n    },\r\n\r\n    deleteCard(state, action) {\r\n      const { cardId } = action.payload;\r\n      if (state.hasOwnProperty(cardId)) {\r\n        delete state[cardId];\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  createCard,\r\n  updateProfile,\r\n  addTodo,\r\n  toggleTodoIsDone,\r\n  deleteTodo,\r\n  deleteCard,\r\n} = cardsSlice.actions;\r\n\r\nexport default cardsSlice.reducer;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ProjectRootContainer = styled.div`\r\n  width: 70%;\r\n  min-width: 350px;\r\n  /* max-width: 600px; */\r\n  height: 100%;\r\n  margin: 0 auto;\r\n\r\n  .project-name {\r\n    font-size: 2rem;\r\n    font-weight: bolder;\r\n    text-align: center;\r\n    padding: 30px;\r\n    border-bottom: 2px solid black;\r\n  }\r\n`;\r\n\r\nexport const MainContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n  margin: 20px auto;\r\n`;\r\n\r\nexport const ProfileSection = styled.div`\r\n  box-sizing: border-box;\r\n  border-right: 1px solid gray;\r\n  padding-right: 10px;\r\n`;\r\n\r\nexport const TodoSection = styled.div`\r\n  box-sizing: border-box;\r\n  padding-left: 10px;\r\n`;\r\n\r\nexport const InlineProfile = styled.p`\r\n  .span {\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nexport const InlineTodo = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 10px auto;\r\n  padding: 2px;\r\n\r\n  .group {\r\n    margin: 0;\r\n    padding: 0 1px;\r\n    display: inline-block;\r\n  }\r\n\r\n  .isDone {\r\n    color: gray;\r\n  }\r\n\r\n  .strikethrough {\r\n    text-decoration: line-through;\r\n  }\r\n\r\n  .label {\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nexport const DeleteTodoContainer = styled.div`\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const CompletedTodoTitle = styled.p`\r\n  color: gray;\r\n  font-size: 1.2rem;\r\n  text-align: center;\r\n`;\r\n\r\nexport const DeleteCardContainer = styled.div`\r\n  width: 100%;\r\n\r\n  #button {\r\n    float: right;\r\n  }\r\n`;\r\n\r\nexport const DeletionBoxContainer = styled.div`\r\n  border: 2px solid rgb(230, 96, 96);\r\n  border-radius: 3px;\r\n  margin: 20px auto;\r\n  padding: 5px;\r\n\r\n  .warning {\r\n    color: black;\r\n    text-align: center;\r\n    margin: 20px auto 40px auto;\r\n  }\r\n\r\n  .button-group {\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 20px;\r\n    justify-content: flex-end;\r\n    margin: 20px 5%;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport FormInput from \"../../components/FormInput/FormInput.component\";\r\nimport {\r\n  addTodo,\r\n  toggleTodoIsDone,\r\n  deleteTodo,\r\n  deleteCard,\r\n} from \"../../redux/slices/cardsSlice\";\r\n\r\nimport {\r\n  ProjectRootContainer,\r\n  ProfileSection,\r\n  TodoSection,\r\n  MainContainer,\r\n  InlineProfile,\r\n  InlineTodo,\r\n  DeleteTodoContainer,\r\n  CompletedTodoTitle,\r\n  DeleteCardContainer,\r\n  DeletionBoxContainer,\r\n} from \"./project.page.styles\";\r\n\r\nconst ProjectPage = ({ match }) => {\r\n  const { id } = match.params;\r\n\r\n  const [newContent, setNewContent] = useState(\"\");\r\n  const resetNewContent = () => setNewContent(\"\");\r\n\r\n  const cards = useSelector((state) => state.cards);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const card = cards.hasOwnProperty(id) ? cards[id] : undefined;\r\n\r\n  const [showDeletionBox, toggleDeletionBox] = useState(false);\r\n  const [deletionInput, setDeletionInput] = useState(\"\");\r\n\r\n  const handleAddTodoClicked = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addTodo({ cardId: id, newContent }));\r\n    resetNewContent();\r\n  };\r\n\r\n  const handleDeleteTodoClicked = (e) => {\r\n    dispatch(deleteTodo({ cardId: id, todoId: e.target.parentNode.id }));\r\n  };\r\n\r\n  const handleConfirmDeleteClicked = () => {\r\n    if (deletionInput !== card.profile.name) {\r\n      alert(\"Input does not match project name, deletetion failed\");\r\n    } else {\r\n      dispatch(deleteCard({ cardId: id }));\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  const handleDiscardDeteleClicked = () => {\r\n    setDeletionInput(\"\");\r\n    toggleDeletionBox(false);\r\n  };\r\n\r\n  const renderTodos = () => {\r\n    const renderActiveTodos = [];\r\n    const renderCompleteTodos = [];\r\n\r\n    for (const todo of card.todos) {\r\n      todo.isDone\r\n        ? renderCompleteTodos.push(\r\n            <InlineTodo key={todo.id} id={todo.id}>\r\n              <div className=\"group isDone\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id={todo.id}\r\n                  onChange={() =>\r\n                    dispatch(toggleTodoIsDone({ cardId: id, todoId: todo.id }))\r\n                  }\r\n                  defaultChecked={true}\r\n                />\r\n                <label htmlFor={todo.id} className=\"strikethrough label\">\r\n                  {todo.content}\r\n                </label>\r\n              </div>\r\n              <DeleteTodoContainer\r\n                onClick={handleDeleteTodoClicked}\r\n                style={{ color: \"gray\" }}\r\n              >\r\n                &#x2716;\r\n              </DeleteTodoContainer>\r\n            </InlineTodo>\r\n          )\r\n        : renderActiveTodos.push(\r\n            <InlineTodo key={todo.id} id={todo.id}>\r\n              <div className=\"group\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id={todo.id}\r\n                  onChange={() =>\r\n                    dispatch(toggleTodoIsDone({ cardId: id, todoId: todo.id }))\r\n                  }\r\n                />\r\n                <label htmlFor={todo.id} className=\"label\">\r\n                  {todo.content}\r\n                </label>\r\n              </div>\r\n              <DeleteTodoContainer\r\n                onClick={handleDeleteTodoClicked}\r\n                style={{ color: \"gray\" }}\r\n              >\r\n                &#x2716;\r\n              </DeleteTodoContainer>\r\n            </InlineTodo>\r\n          );\r\n    }\r\n    return (\r\n      <>\r\n        {renderActiveTodos}\r\n        <CompletedTodoTitle>Completed</CompletedTodoTitle>\r\n        {renderCompleteTodos}\r\n      </>\r\n    );\r\n  };\r\n\r\n  if (!card) {\r\n    return <Redirect to=\"/404\" />;\r\n  }\r\n\r\n  return (\r\n    <ProjectRootContainer>\r\n      <div className=\"project-name\">{card.profile.name}</div>\r\n      <MainContainer>\r\n        <ProfileSection>\r\n          <InlineProfile>\r\n            CREATED AT: <span>{card.createdAt.slice(0, 10)}</span>\r\n          </InlineProfile>\r\n          {Object.entries(card.profile).map(([key, value]) =>\r\n            key !== \"customFields\" ? (\r\n              <InlineProfile key={key}>\r\n                {key.toUpperCase()}: <span>{value ? value : \"N/A\"}</span>\r\n              </InlineProfile>\r\n            ) : (\r\n              value.map((field) => (\r\n                <InlineProfile key={field.id}>\r\n                  {field.name.toUpperCase()}: {field.value}\r\n                </InlineProfile>\r\n              ))\r\n            )\r\n          )}\r\n          <Button\r\n            variant=\"outline-dark\"\r\n            onClick={() => history.push(`/profile/${id}`)}\r\n          >\r\n            Edit Profile\r\n          </Button>\r\n        </ProfileSection>\r\n        <TodoSection>\r\n          {card.todos.length ? renderTodos() : <h2>No todos</h2>}\r\n          <InlineTodo>\r\n            <FormInput\r\n              label=\"New todo\"\r\n              value={newContent}\r\n              onChange={(e) => setNewContent(e.target.value)}\r\n            />\r\n            <Button\r\n              className=\"p-0\"\r\n              size=\"lg\"\r\n              variant=\"white\"\r\n              style={{\r\n                fontWeight: \"bolder\",\r\n                fontSize: \"2rem\",\r\n                boxShadow: \"none\",\r\n              }}\r\n              onClick={handleAddTodoClicked}\r\n            >\r\n              &#43;\r\n            </Button>\r\n          </InlineTodo>\r\n        </TodoSection>\r\n      </MainContainer>\r\n      <DeleteCardContainer>\r\n        {showDeletionBox ? (\r\n          <DeletionBoxContainer>\r\n            <h2 className=\"warning\">Confirm Deletion</h2>\r\n            <form>\r\n              <FormInput\r\n                label=\"Enter Project name\"\r\n                value={deletionInput}\r\n                onChange={(e) => setDeletionInput(e.target.value)}\r\n              />\r\n            </form>\r\n            <div className=\"button-group\">\r\n              <Button\r\n                size=\"md\"\r\n                variant=\"danger\"\r\n                onClick={handleConfirmDeleteClicked}\r\n              >\r\n                CONFIRM\r\n              </Button>\r\n              <Button\r\n                size=\"md\"\r\n                variant=\"dark\"\r\n                onClick={handleDiscardDeteleClicked}\r\n              >\r\n                DISCARD\r\n              </Button>\r\n            </div>\r\n          </DeletionBoxContainer>\r\n        ) : (\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"outline-dark\"\r\n            onClick={() => toggleDeletionBox(true)}\r\n            id=\"button\"\r\n          >\r\n            DELETE CARD\r\n          </Button>\r\n        )}\r\n      </DeleteCardContainer>\r\n    </ProjectRootContainer>\r\n  );\r\n};\r\n\r\nexport default ProjectPage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ProfileRootContainer = styled.div`\r\n  width: 50%;\r\n  min-width: 300px;\r\n  max-width: 600px;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const FormContainer = styled.form`\r\n  width: 100%;\r\n  margin: 50px auto;\r\n  /* max-width: 400px; */\r\n  border: 2px solid black;\r\n  border-radius: 22px;\r\n  flex-direction: column;\r\n  padding: 25px 15px;\r\n\r\n  h2 {\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const CustomFieldContainer = styled.div`\r\n  border-radius: 10px;\r\n  color: #000;\r\n  width: 90%;\r\n  padding: 20px;\r\n  margin: 50px auto 20px auto;\r\n  border: solid 1px #999;\r\n  box-shadow: 0 4px 23px 5px rgba(0, 0, 0, 0.2), 0 2px 6px rgba(0, 0, 0, 0.15);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const SelectContainer = styled.select`\r\n  margin: 10px auto;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  width: 90%;\r\n`;\r\n\r\nexport const CustomFieldDisplayContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  width: 95%;\r\n`;\r\n\r\nexport const DeleteButtonContainer = styled.div`\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { Button, ButtonGroup } from \"react-bootstrap\";\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport FormInput from \"../../components/FormInput/FormInput.component\";\r\n\r\nimport {\r\n  ProfileRootContainer,\r\n  FormContainer,\r\n  CustomFieldContainer,\r\n  SelectContainer,\r\n  CustomFieldDisplayContainer,\r\n  DeleteButtonContainer,\r\n} from \"./profile.page.styles\";\r\nimport { createCard, updateProfile } from \"../../redux/slices/cardsSlice\";\r\n\r\nconst ProfilePage = ({ match }) => {\r\n  const { id } = match.params;\r\n  const cards = useSelector((state) => state.cards);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const card = !!id\r\n    ? cards.hasOwnProperty(id)\r\n      ? cards[id]\r\n      : undefined\r\n    : undefined;\r\n\r\n  const [profile, setProfile] = useState(\r\n    !!card\r\n      ? {\r\n          name: card.profile.name,\r\n          address: card.profile.address,\r\n          email: card.profile.email,\r\n          mobile: card.profile.mobile,\r\n          customFields: [...card.profile.customFields],\r\n        }\r\n      : {\r\n          name: \"\",\r\n          address: \"\",\r\n          email: \"\",\r\n          mobile: \"\",\r\n          customFields: [],\r\n        }\r\n  );\r\n\r\n  const resetProfile = () =>\r\n    setProfile({\r\n      name: \"\",\r\n      address: \"\",\r\n      email: \"\",\r\n      mobile: \"\",\r\n      customFields: [],\r\n    });\r\n\r\n  const [field, setField] = useState({\r\n    name: \"\",\r\n    type: \"text\",\r\n    value: \"\",\r\n  });\r\n\r\n  const resetField = () =>\r\n    setField({\r\n      name: \"\",\r\n      type: \"text\",\r\n      value: \"\",\r\n    });\r\n\r\n  const handleAddFieldClicked = (e) => {\r\n    e.preventDefault();\r\n    setProfile({\r\n      ...profile,\r\n      customFields: [...profile.customFields, { ...field, id: nanoid() }],\r\n    });\r\n    resetField();\r\n  };\r\n\r\n  const handleCreateCardClicked = () => {\r\n    dispatch(createCard(profile));\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleCancelCreateCardClicked = () => {\r\n    resetProfile();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleCustomFieldChange = (e) => {\r\n    const { name, value } = e.target;\r\n    const id = e.target.id;\r\n    setProfile({\r\n      ...profile,\r\n      customFields: [\r\n        ...profile.customFields.map((field) =>\r\n          field.id === id ? { ...field, name: name, value: value } : field\r\n        ),\r\n      ],\r\n    });\r\n  };\r\n\r\n  const handleCustomFieldDelete = (e) => {\r\n    const id = e.target.parentNode.id;\r\n\r\n    setProfile({\r\n      ...profile,\r\n      customFields: [\r\n        ...profile.customFields.filter((entry) => entry.id !== id),\r\n      ],\r\n    });\r\n  };\r\n\r\n  const handleUpdateProfileClicked = () => {\r\n    dispatch(updateProfile({ cardId: id, profile }));\r\n    history.push(`/project/${id}`);\r\n  };\r\n\r\n  const renderCustomFields = profile.customFields.map(\r\n    ({ id, name, type, value }) => {\r\n      return (\r\n        <CustomFieldDisplayContainer key={id} id={id}>\r\n          <FormInput\r\n            name={name}\r\n            type={type}\r\n            value={value}\r\n            label={name}\r\n            id={id}\r\n            onChange={handleCustomFieldChange}\r\n          />\r\n          <DeleteButtonContainer onClick={handleCustomFieldDelete}>\r\n            &#x2716;\r\n          </DeleteButtonContainer>\r\n        </CustomFieldDisplayContainer>\r\n      );\r\n    }\r\n  );\r\n\r\n  if (!!id && !card) {\r\n    return <Redirect to=\"/404\" />;\r\n  }\r\n\r\n  return (\r\n    <ProfileRootContainer>\r\n      <FormContainer>\r\n        <h2>NEW</h2>\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={profile.name}\r\n          label=\"Name\"\r\n          onChange={(e) => setProfile({ ...profile, name: e.target.value })}\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"profileAddress\"\r\n          value={profile.address}\r\n          label=\"Address\"\r\n          onChange={(e) => setProfile({ ...profile, address: e.target.value })}\r\n        />\r\n        <FormInput\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={profile.email}\r\n          label=\"Email\"\r\n          onChange={(e) => setProfile({ ...profile, email: e.target.value })}\r\n        />\r\n        <FormInput\r\n          type=\"tel\"\r\n          name=\"mobile\"\r\n          value={profile.mobile}\r\n          label=\"Mobile\"\r\n          onChange={(e) => setProfile({ ...profile, mobile: e.target.value })}\r\n        />\r\n\r\n        {profile.customFields.length ? renderCustomFields : null}\r\n\r\n        <CustomFieldContainer>\r\n          <FormInput\r\n            type=\"text\"\r\n            value={field.name}\r\n            name=\"name\"\r\n            onChange={(e) => setField({ ...field, name: e.target.value })}\r\n            label=\"Field Name\"\r\n          />\r\n          <SelectContainer\r\n            name=\"type\"\r\n            onChange={(e) => setField({ ...field, type: e.target.value })}\r\n            value={field.type}\r\n            className=\"mb-2\"\r\n            styles\r\n          >\r\n            <option value=\"text\">Text</option>\r\n            <option value=\"number\">Number</option>\r\n            <option value=\"tel\">Phone</option>\r\n            <option value=\"email\">Email</option>\r\n            <option value=\"date\">Date</option>\r\n          </SelectContainer>\r\n          <FormInput\r\n            type={field.type}\r\n            value={field.value}\r\n            name=\"value\"\r\n            onChange={(e) => setField({ ...field, value: e.target.value })}\r\n            label={field.type === \"date\" ? null : \"Field Value\"}\r\n          />\r\n          <Button\r\n            className=\"mt-2\"\r\n            variant=\"outline-dark\"\r\n            onClick={handleAddFieldClicked}\r\n            disabled={!field.name || !field.value}\r\n          >\r\n            ADD\r\n          </Button>\r\n        </CustomFieldContainer>\r\n      </FormContainer>\r\n      <ButtonGroup>\r\n        {card ? (\r\n          <Button\r\n            variant=\"dark\"\r\n            onClick={handleUpdateProfileClicked}\r\n            hidden={!profile.name}\r\n          >\r\n            Update\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            variant=\"dark\"\r\n            onClick={handleCreateCardClicked}\r\n            hidden={!profile.name}\r\n          >\r\n            Create\r\n          </Button>\r\n        )}\r\n        <Button variant=\"secondary\" onClick={handleCancelCreateCardClicked}>\r\n          Cancel\r\n        </Button>\r\n      </ButtonGroup>\r\n    </ProfileRootContainer>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React from \"react\";\r\n\r\nconst NotFoundPage = () => <h1>404, Page not found</h1>;\r\n\r\nexport default NotFoundPage;\r\n","import React from \"react\";\r\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"md\" bg=\"light\" sticky=\"top\">\r\n      <Container>\r\n        <Navbar.Brand className>PM-Demo</Navbar.Brand>\r\n      </Container>\r\n      <Nav>\r\n        <Container className=\"justify-content-end cursor-pointer\">\r\n          <Link to=\"/\" className=\"px-4 py-2 rounded\">\r\n            Home\r\n          </Link>\r\n        </Container>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\n\nimport HomePage from \"./pages/homePage/home.page\";\nimport ProjectPage from \"./pages/projectPage/project.page\";\nimport ProfilePage from \"./pages/profilePage/profile.page\";\n\nimport NotFoundPage from \"./pages/404\";\nimport Header from \"./components/Header.component\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/project/:id\" component={ProjectPage} />\n        <Route path={[\"/new\", \"/profile/:id\"]} component={ProfilePage} />\n        <Route path=\"/notfound\" component={NotFoundPage} />\n        <Redirect to=\"/notfound\" />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport cardsReducer from \"./slices/cardsSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    cards: cardsReducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}